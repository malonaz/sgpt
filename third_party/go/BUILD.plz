config_setting(
    name = "__config_linux_amd64",
    values = {
        "os": "linux",
        "cpu": "amd64",
    },
)

config_setting(
    name = "__config_darwin_amd64",
    values = {
        "os": "darwin",
        "cpu": "amd64",
    },
)

config_setting(
    name = "__config_linux_arm64",
    values = {
        "os": "linux",
        "cpu": "arm64",
    },
)

config_setting(
    name = "__config_darwin_arm64",
    values = {
        "os": "darwin",
        "cpu": "arm64",
    },
)

go_mod_download(
    name = "dario.cat__mergo",
    _tag = "download",
    module = "dario.cat/mergo",
    version = "v1.0.1",
    visibility = ["PUBLIC"],
)

go_module(
    name = "dario.cat__mergo",
    download = ":_dario.cat__mergo#download",
    install = ["."],
    module = "dario.cat/mergo",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__AlecAivazis__survey__v2",
    _tag = "download",
    module = "github.com/AlecAivazis/survey/v2",
    version = "v2.3.7",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__AlecAivazis__survey__v2",
    download = ":_github.com__AlecAivazis__survey__v2#download",
    install = ["."],
    module = "github.com/AlecAivazis/survey/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__AlecAivazis__survey__v2__core",
        ":github.com__AlecAivazis__survey__v2__terminal",
        ":github.com__kballard__go-shellquote",
        ":golang.org__x__term",
        ":golang.org__x__text__cases",
        ":golang.org__x__text__language",
    ],
)

go_module(
    name = "github.com__AlecAivazis__survey__v2__core",
    download = ":_github.com__AlecAivazis__survey__v2#download",
    install = ["core"],
    module = "github.com/AlecAivazis/survey/v2",
    visibility = ["PUBLIC"],
    deps = [":github.com__mgutz__ansi"],
)

go_module(
    name = "github.com__AlecAivazis__survey__v2__terminal",
    download = ":_github.com__AlecAivazis__survey__v2#download",
    install = ["terminal"],
    module = "github.com/AlecAivazis/survey/v2",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__text__width"],
)

go_mod_download(
    name = "github.com__Masterminds__goutils",
    _tag = "download",
    module = "github.com/Masterminds/goutils",
    version = "v1.1.1",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__Masterminds__goutils",
    download = ":_github.com__Masterminds__goutils#download",
    install = ["."],
    module = "github.com/Masterminds/goutils",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__Masterminds__semver__v3",
    _tag = "download",
    module = "github.com/Masterminds/semver/v3",
    version = "v3.3.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__Masterminds__semver__v3",
    download = ":_github.com__Masterminds__semver__v3#download",
    install = ["."],
    module = "github.com/Masterminds/semver/v3",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__Masterminds__sprig__v3",
    _tag = "download",
    module = "github.com/Masterminds/sprig/v3",
    version = "v3.3.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__Masterminds__sprig__v3",
    download = ":_github.com__Masterminds__sprig__v3#download",
    install = ["."],
    module = "github.com/Masterminds/sprig/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":dario.cat__mergo",
        ":github.com__Masterminds__goutils",
        ":github.com__Masterminds__semver__v3",
        ":github.com__google__uuid",
        ":github.com__huandu__xstrings",
        ":github.com__mitchellh__copystructure",
        ":github.com__shopspring__decimal",
        ":github.com__spf13__cast",
        ":golang.org__x__crypto__bcrypt",
        ":golang.org__x__crypto__scrypt",
    ],
)

go_mod_download(
    name = "github.com__bazelbuild__buildtools",
    _tag = "download",
    module = "github.com/bazelbuild/buildtools",
    version = "v0.0.0-20230510134650-37bd1811516d",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__bazelbuild__buildtools__build",
    download = ":_github.com__bazelbuild__buildtools#download",
    install = ["build"],
    module = "github.com/bazelbuild/buildtools",
    visibility = ["PUBLIC"],
    deps = [":github.com__bazelbuild__buildtools__tables"],
)

go_module(
    name = "github.com__bazelbuild__buildtools__tables",
    download = ":_github.com__bazelbuild__buildtools#download",
    install = ["tables"],
    module = "github.com/bazelbuild/buildtools",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__buger__goterm",
    _tag = "download",
    module = "github.com/buger/goterm",
    version = "v1.0.4",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__buger__goterm",
    download = ":_github.com__buger__goterm#download",
    install = ["."],
    module = "github.com/buger/goterm",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__sys__unix"],
)

go_mod_download(
    name = "github.com__chzyer__readline",
    _tag = "download",
    module = "github.com/chzyer/readline",
    version = "v0.0.0-20180603132655-2972be24d48e",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__chzyer__readline",
    download = ":_github.com__chzyer__readline#download",
    install = ["."],
    module = "github.com/chzyer/readline",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__dustin__go-humanize",
    _tag = "download",
    module = "github.com/dustin/go-humanize",
    version = "v1.0.1",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__dustin__go-humanize",
    download = ":_github.com__dustin__go-humanize#download",
    install = ["."],
    module = "github.com/dustin/go-humanize",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__fatih__color",
    _tag = "download",
    module = "github.com/fatih/color",
    version = "v1.15.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__fatih__color",
    download = ":_github.com__fatih__color#download",
    install = ["."],
    module = "github.com/fatih/color",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__mattn__go-colorable",
        ":github.com__mattn__go-isatty",
    ],
)

go_mod_download(
    name = "github.com__google__go-jsonnet",
    _tag = "download",
    module = "github.com/google/go-jsonnet",
    version = "v0.20.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__google__go-jsonnet",
    download = ":_github.com__google__go-jsonnet#download",
    install = ["."],
    module = "github.com/google/go-jsonnet",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__google__go-jsonnet__ast",
        ":github.com__google__go-jsonnet__astgen",
        ":github.com__google__go-jsonnet__internal__errors",
        ":github.com__google__go-jsonnet__internal__parser",
        ":github.com__google__go-jsonnet__internal__program",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "github.com__google__go-jsonnet__ast",
    download = ":_github.com__google__go-jsonnet#download",
    install = ["ast"],
    module = "github.com/google/go-jsonnet",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__google__go-jsonnet__astgen",
    download = ":_github.com__google__go-jsonnet#download",
    install = ["astgen"],
    module = "github.com/google/go-jsonnet",
    visibility = ["PUBLIC"],
    deps = [":github.com__google__go-jsonnet__ast"],
)

go_module(
    name = "github.com__google__go-jsonnet__internal__errors",
    download = ":_github.com__google__go-jsonnet#download",
    install = ["internal/errors"],
    module = "github.com/google/go-jsonnet",
    visibility = ["PUBLIC"],
    deps = [":github.com__google__go-jsonnet__ast"],
)

go_module(
    name = "github.com__google__go-jsonnet__internal__parser",
    download = ":_github.com__google__go-jsonnet#download",
    install = ["internal/parser"],
    module = "github.com/google/go-jsonnet",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__google__go-jsonnet__ast",
        ":github.com__google__go-jsonnet__internal__errors",
    ],
)

go_module(
    name = "github.com__google__go-jsonnet__internal__program",
    download = ":_github.com__google__go-jsonnet#download",
    install = ["internal/program"],
    module = "github.com/google/go-jsonnet",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__google__go-jsonnet__ast",
        ":github.com__google__go-jsonnet__internal__errors",
        ":github.com__google__go-jsonnet__internal__parser",
    ],
)

go_mod_download(
    name = "github.com__google__uuid",
    _tag = "download",
    module = "github.com/google/uuid",
    version = "v1.6.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__google__uuid",
    download = ":_github.com__google__uuid#download",
    install = ["."],
    module = "github.com/google/uuid",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__huandu__xstrings",
    _tag = "download",
    module = "github.com/huandu/xstrings",
    version = "v1.5.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__huandu__xstrings",
    download = ":_github.com__huandu__xstrings#download",
    install = ["."],
    module = "github.com/huandu/xstrings",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__kballard__go-shellquote",
    _tag = "download",
    module = "github.com/kballard/go-shellquote",
    version = "v0.0.0-20180428030007-95032a82bc51",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__kballard__go-shellquote",
    download = ":_github.com__kballard__go-shellquote#download",
    install = ["."],
    module = "github.com/kballard/go-shellquote",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__liushuangls__go-anthropic__v2",
    _tag = "download",
    module = "github.com/liushuangls/go-anthropic/v2",
    version = "v2.8.1",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__liushuangls__go-anthropic__v2",
    download = ":_github.com__liushuangls__go-anthropic__v2#download",
    install = ["."],
    module = "github.com/liushuangls/go-anthropic/v2",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__mattn__go-colorable",
    _tag = "download",
    module = "github.com/mattn/go-colorable",
    version = "v0.1.13",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__mattn__go-colorable",
    download = ":_github.com__mattn__go-colorable#download",
    install = ["."],
    module = "github.com/mattn/go-colorable",
    visibility = ["PUBLIC"],
    deps = [":github.com__mattn__go-isatty"],
)

go_mod_download(
    name = "github.com__mattn__go-isatty",
    _tag = "download",
    module = "github.com/mattn/go-isatty",
    version = "v0.0.20",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__mattn__go-isatty",
    download = ":_github.com__mattn__go-isatty#download",
    install = ["."],
    module = "github.com/mattn/go-isatty",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__sys__unix"],
)

go_mod_download(
    name = "github.com__mgutz__ansi",
    _tag = "download",
    module = "github.com/mgutz/ansi",
    version = "v0.0.0-20170206155736-9520e82c474b",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__mgutz__ansi",
    download = ":_github.com__mgutz__ansi#download",
    install = ["."],
    module = "github.com/mgutz/ansi",
    visibility = ["PUBLIC"],
    deps = [":github.com__mattn__go-colorable"],
)

go_mod_download(
    name = "github.com__mitchellh__copystructure",
    _tag = "download",
    module = "github.com/mitchellh/copystructure",
    version = "v1.2.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__mitchellh__copystructure",
    download = ":_github.com__mitchellh__copystructure#download",
    install = ["."],
    module = "github.com/mitchellh/copystructure",
    visibility = ["PUBLIC"],
    deps = [":github.com__mitchellh__reflectwalk"],
)

go_mod_download(
    name = "github.com__mitchellh__reflectwalk",
    _tag = "download",
    module = "github.com/mitchellh/reflectwalk",
    version = "v1.0.2",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__mitchellh__reflectwalk",
    download = ":_github.com__mitchellh__reflectwalk#download",
    install = ["."],
    module = "github.com/mitchellh/reflectwalk",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__ncruces__go-strftime",
    _tag = "download",
    module = "github.com/ncruces/go-strftime",
    version = "v0.1.9",
    visibility = ["PUBLIC"],
)

if is_platform(
    arch = [
        "amd64",
        "arm64",
    ],
    os = ["darwin"],
):
    go_module(name = "github.com__ncruces__go-strftime", download = ":_github.com__ncruces__go-strftime#download", install = ["."], module = "github.com/ncruces/go-strftime", visibility = ["PUBLIC"], deps = [])

go_mod_download(
    name = "github.com__pkg__errors",
    _tag = "download",
    module = "github.com/pkg/errors",
    version = "v0.9.1",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__pkg__errors",
    download = ":_github.com__pkg__errors#download",
    install = ["."],
    module = "github.com/pkg/errors",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__remyoudompheng__bigfft",
    _tag = "download",
    module = "github.com/remyoudompheng/bigfft",
    version = "v0.0.0-20230129092748-24d4a6f8daec",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__remyoudompheng__bigfft",
    download = ":_github.com__remyoudompheng__bigfft#download",
    install = ["."],
    module = "github.com/remyoudompheng/bigfft",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__sashabaranov__go-openai",
    _tag = "download",
    module = "github.com/goodenough227/go-openai",
    version = "v0.0.0-20250207091202-52738616d5a4",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__sashabaranov__go-openai",
    download = ":_github.com__sashabaranov__go-openai#download",
    install = ["."],
    module = "github.com/sashabaranov/go-openai",
    visibility = ["PUBLIC"],
    deps = [":github.com__sashabaranov__go-openai__internal"],
)

go_module(
    name = "github.com__sashabaranov__go-openai__internal",
    download = ":_github.com__sashabaranov__go-openai#download",
    install = ["internal"],
    module = "github.com/sashabaranov/go-openai",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__scylladb__go-set",
    _tag = "download",
    module = "github.com/scylladb/go-set",
    version = "v1.0.2",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__scylladb__go-set__strset",
    download = ":_github.com__scylladb__go-set#download",
    install = ["strset"],
    module = "github.com/scylladb/go-set",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__shopspring__decimal",
    _tag = "download",
    module = "github.com/shopspring/decimal",
    version = "v1.4.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__shopspring__decimal",
    download = ":_github.com__shopspring__decimal#download",
    install = ["."],
    module = "github.com/shopspring/decimal",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__spf13__cast",
    _tag = "download",
    module = "github.com/spf13/cast",
    version = "v1.7.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__spf13__cast",
    download = ":_github.com__spf13__cast#download",
    install = ["."],
    module = "github.com/spf13/cast",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__spf13__cobra",
    _tag = "download",
    module = "github.com/spf13/cobra",
    version = "v1.7.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__spf13__cobra",
    download = ":_github.com__spf13__cobra#download",
    install = ["."],
    module = "github.com/spf13/cobra",
    visibility = ["PUBLIC"],
    deps = [":github.com__spf13__pflag"],
)

go_mod_download(
    name = "github.com__spf13__pflag",
    _tag = "download",
    module = "github.com/spf13/pflag",
    version = "v1.0.5",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__spf13__pflag",
    download = ":_github.com__spf13__pflag#download",
    install = ["."],
    module = "github.com/spf13/pflag",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__waigani__diffparser",
    _tag = "download",
    module = "github.com/waigani/diffparser",
    version = "v0.0.0-20190828052634-7391f219313d",
    visibility = ["PUBLIC"],
)

go_module(
    name = "github.com__waigani__diffparser",
    download = ":_github.com__waigani__diffparser#download",
    install = ["."],
    module = "github.com/waigani/diffparser",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "golang.org__x__crypto",
    _tag = "download",
    module = "golang.org/x/crypto",
    version = "v0.26.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "golang.org__x__crypto__bcrypt",
    download = ":_golang.org__x__crypto#download",
    install = ["bcrypt"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__crypto__blowfish"],
)

go_module(
    name = "golang.org__x__crypto__blowfish",
    download = ":_golang.org__x__crypto#download",
    install = ["blowfish"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__crypto__pbkdf2",
    download = ":_golang.org__x__crypto#download",
    install = ["pbkdf2"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__crypto__scrypt",
    download = ":_golang.org__x__crypto#download",
    install = ["scrypt"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__crypto__pbkdf2"],
)

go_mod_download(
    name = "golang.org__x__sys",
    _tag = "download",
    module = "golang.org/x/sys",
    version = "v0.23.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "golang.org__x__sys__unix",
    download = ":_golang.org__x__sys#download",
    install = ["unix"],
    module = "golang.org/x/sys",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "golang.org__x__term",
    _tag = "download",
    module = "golang.org/x/term",
    version = "v0.23.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "golang.org__x__term",
    download = ":_golang.org__x__term#download",
    install = ["."],
    module = "golang.org/x/term",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__sys__unix"],
)

go_mod_download(
    name = "golang.org__x__text",
    _tag = "download",
    module = "golang.org/x/text",
    version = "v0.17.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "golang.org__x__text__cases",
    download = ":_golang.org__x__text#download",
    install = ["cases"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__internal",
        ":golang.org__x__text__language",
        ":golang.org__x__text__transform",
        ":golang.org__x__text__unicode__norm",
    ],
)

go_module(
    name = "golang.org__x__text__internal",
    download = ":_golang.org__x__text#download",
    install = ["internal"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__text__language"],
)

go_module(
    name = "golang.org__x__text__internal__language",
    download = ":_golang.org__x__text#download",
    install = ["internal/language"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__text__internal__tag"],
)

go_module(
    name = "golang.org__x__text__internal__language__compact",
    download = ":_golang.org__x__text#download",
    install = ["internal/language/compact"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__text__internal__language"],
)

go_module(
    name = "golang.org__x__text__internal__tag",
    download = ":_golang.org__x__text#download",
    install = ["internal/tag"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__text__language",
    download = ":_golang.org__x__text#download",
    install = ["language"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__internal__language",
        ":golang.org__x__text__internal__language__compact",
    ],
)

go_module(
    name = "golang.org__x__text__transform",
    download = ":_golang.org__x__text#download",
    install = ["transform"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__text__unicode__norm",
    download = ":_golang.org__x__text#download",
    install = ["unicode/norm"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__text__transform"],
)

go_module(
    name = "golang.org__x__text__width",
    download = ":_golang.org__x__text#download",
    install = ["width"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__text__transform"],
)

go_mod_download(
    name = "gopkg.in__yaml.v2",
    _tag = "download",
    module = "gopkg.in/yaml.v2",
    version = "v2.3.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "gopkg.in__yaml.v2",
    download = ":_gopkg.in__yaml.v2#download",
    install = ["."],
    module = "gopkg.in/yaml.v2",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "modernc.org__libc",
    _tag = "download",
    module = "modernc.org/libc",
    version = "v1.55.3",
    visibility = ["PUBLIC"],
)

go_module(
    name = "modernc.org__libc",
    download = ":_modernc.org__libc#download",
    install = ["."],
    module = "modernc.org/libc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__dustin__go-humanize",
        ":github.com__google__uuid",
        ":golang.org__x__sys__unix",
        ":modernc.org__libc__uuid__uuid",
        ":modernc.org__mathutil",
        ":modernc.org__memory",
    ] + select({
        ":__config_darwin_amd64": [
            ":github.com__mattn__go-isatty",
            ":github.com__ncruces__go-strftime",
            ":modernc.org__libc__errno",
            ":modernc.org__libc__fcntl",
            ":modernc.org__libc__fts",
            ":modernc.org__libc__grp",
            ":modernc.org__libc__honnef.co__go__netdb",
            ":modernc.org__libc__langinfo",
            ":modernc.org__libc__limits",
            ":modernc.org__libc__netdb",
            ":modernc.org__libc__netinet__in",
            ":modernc.org__libc__poll",
            ":modernc.org__libc__pthread",
            ":modernc.org__libc__pwd",
            ":modernc.org__libc__signal",
            ":modernc.org__libc__stdio",
            ":modernc.org__libc__stdlib",
            ":modernc.org__libc__sys__socket",
            ":modernc.org__libc__sys__stat",
            ":modernc.org__libc__sys__types",
            ":modernc.org__libc__termios",
            ":modernc.org__libc__time",
            ":modernc.org__libc__unistd",
            ":modernc.org__libc__utime",
            ":modernc.org__libc__wctype",
        ],
        ":__config_darwin_arm64": [
            ":github.com__mattn__go-isatty",
            ":github.com__ncruces__go-strftime",
            ":modernc.org__libc__errno",
            ":modernc.org__libc__fcntl",
            ":modernc.org__libc__fts",
            ":modernc.org__libc__grp",
            ":modernc.org__libc__honnef.co__go__netdb",
            ":modernc.org__libc__langinfo",
            ":modernc.org__libc__limits",
            ":modernc.org__libc__netdb",
            ":modernc.org__libc__netinet__in",
            ":modernc.org__libc__poll",
            ":modernc.org__libc__pthread",
            ":modernc.org__libc__pwd",
            ":modernc.org__libc__signal",
            ":modernc.org__libc__stdio",
            ":modernc.org__libc__stdlib",
            ":modernc.org__libc__sys__socket",
            ":modernc.org__libc__sys__stat",
            ":modernc.org__libc__sys__types",
            ":modernc.org__libc__termios",
            ":modernc.org__libc__time",
            ":modernc.org__libc__unistd",
            ":modernc.org__libc__utime",
            ":modernc.org__libc__wctype",
        ],
        ":__config_linux_amd64": [],
        ":__config_linux_arm64": [],
        "default": [],
    }),
)

if is_platform(
    arch = [
        "amd64",
        "arm64",
    ],
    os = ["darwin"],
):
    go_module(name = "modernc.org__libc__errno", download = ":_modernc.org__libc#download", install = ["errno"], module = "modernc.org/libc", visibility = ["PUBLIC"], deps = [])

if is_platform(
    arch = [
        "amd64",
        "arm64",
    ],
    os = ["darwin"],
):
    go_module(name = "modernc.org__libc__fcntl", download = ":_modernc.org__libc#download", install = ["fcntl"], module = "modernc.org/libc", visibility = ["PUBLIC"], deps = [])

if is_platform(
    arch = [
        "amd64",
        "arm64",
    ],
    os = ["darwin"],
):
    go_module(name = "modernc.org__libc__fts", download = ":_modernc.org__libc#download", install = ["fts"], module = "modernc.org/libc", visibility = ["PUBLIC"], deps = [])

if is_platform(
    arch = [
        "amd64",
        "arm64",
    ],
    os = ["darwin"],
):
    go_module(name = "modernc.org__libc__grp", download = ":_modernc.org__libc#download", install = ["grp"], module = "modernc.org/libc", visibility = ["PUBLIC"], deps = [])

if is_platform(
    arch = [
        "amd64",
        "arm64",
    ],
    os = ["darwin"],
):
    go_module(name = "modernc.org__libc__honnef.co__go__netdb", download = ":_modernc.org__libc#download", install = ["honnef.co/go/netdb"], module = "modernc.org/libc", visibility = ["PUBLIC"], deps = [])

if is_platform(
    arch = [
        "amd64",
        "arm64",
    ],
    os = ["darwin"],
):
    go_module(name = "modernc.org__libc__langinfo", download = ":_modernc.org__libc#download", install = ["langinfo"], module = "modernc.org/libc", visibility = ["PUBLIC"], deps = [])

if is_platform(
    arch = [
        "amd64",
        "arm64",
    ],
    os = ["darwin"],
):
    go_module(name = "modernc.org__libc__limits", download = ":_modernc.org__libc#download", install = ["limits"], module = "modernc.org/libc", visibility = ["PUBLIC"], deps = [])

if is_platform(
    arch = [
        "amd64",
        "arm64",
    ],
    os = ["darwin"],
):
    go_module(name = "modernc.org__libc__netdb", download = ":_modernc.org__libc#download", install = ["netdb"], module = "modernc.org/libc", visibility = ["PUBLIC"], deps = [])

if is_platform(
    arch = [
        "amd64",
        "arm64",
    ],
    os = ["darwin"],
):
    go_module(name = "modernc.org__libc__netinet__in", download = ":_modernc.org__libc#download", install = ["netinet/in"], module = "modernc.org/libc", visibility = ["PUBLIC"], deps = [])

if is_platform(
    arch = [
        "amd64",
        "arm64",
    ],
    os = ["darwin"],
):
    go_module(name = "modernc.org__libc__poll", download = ":_modernc.org__libc#download", install = ["poll"], module = "modernc.org/libc", visibility = ["PUBLIC"], deps = [])

if is_platform(
    arch = [
        "amd64",
        "arm64",
    ],
    os = ["darwin"],
):
    go_module(name = "modernc.org__libc__pthread", download = ":_modernc.org__libc#download", install = ["pthread"], module = "modernc.org/libc", visibility = ["PUBLIC"], deps = [])

if is_platform(
    arch = [
        "amd64",
        "arm64",
    ],
    os = ["darwin"],
):
    go_module(name = "modernc.org__libc__pwd", download = ":_modernc.org__libc#download", install = ["pwd"], module = "modernc.org/libc", visibility = ["PUBLIC"], deps = [])

if is_platform(
    arch = [
        "amd64",
        "arm64",
    ],
    os = ["darwin"],
):
    go_module(name = "modernc.org__libc__signal", download = ":_modernc.org__libc#download", install = ["signal"], module = "modernc.org/libc", visibility = ["PUBLIC"], deps = [])

if is_platform(
    arch = [
        "amd64",
        "arm64",
    ],
    os = ["darwin"],
):
    go_module(name = "modernc.org__libc__stdio", download = ":_modernc.org__libc#download", install = ["stdio"], module = "modernc.org/libc", visibility = ["PUBLIC"], deps = [])

if is_platform(
    arch = [
        "arm64",
        "amd64",
    ],
    os = ["darwin"],
):
    go_module(name = "modernc.org__libc__stdlib", download = ":_modernc.org__libc#download", install = ["stdlib"], module = "modernc.org/libc", visibility = ["PUBLIC"], deps = [])

if is_platform(
    arch = [
        "amd64",
        "arm64",
    ],
    os = ["darwin"],
):
    go_module(name = "modernc.org__libc__sys__socket", download = ":_modernc.org__libc#download", install = ["sys/socket"], module = "modernc.org/libc", visibility = ["PUBLIC"], deps = [])

if is_platform(
    arch = [
        "arm64",
        "amd64",
    ],
    os = ["darwin"],
):
    go_module(name = "modernc.org__libc__sys__stat", download = ":_modernc.org__libc#download", install = ["sys/stat"], module = "modernc.org/libc", visibility = ["PUBLIC"], deps = [])

go_module(
    name = "modernc.org__libc__sys__types",
    download = ":_modernc.org__libc#download",
    install = ["sys/types"],
    module = "modernc.org/libc",
    visibility = ["PUBLIC"],
    deps = [],
)

if is_platform(
    arch = [
        "amd64",
        "arm64",
    ],
    os = ["darwin"],
):
    go_module(name = "modernc.org__libc__termios", download = ":_modernc.org__libc#download", install = ["termios"], module = "modernc.org/libc", visibility = ["PUBLIC"], deps = [])

if is_platform(
    arch = [
        "amd64",
        "arm64",
    ],
    os = ["darwin"],
):
    go_module(name = "modernc.org__libc__time", download = ":_modernc.org__libc#download", install = ["time"], module = "modernc.org/libc", visibility = ["PUBLIC"], deps = [])

if is_platform(
    arch = [
        "amd64",
        "arm64",
    ],
    os = ["darwin"],
):
    go_module(name = "modernc.org__libc__unistd", download = ":_modernc.org__libc#download", install = ["unistd"], module = "modernc.org/libc", visibility = ["PUBLIC"], deps = [])

if is_platform(
    arch = [
        "amd64",
        "arm64",
    ],
    os = ["darwin"],
):
    go_module(name = "modernc.org__libc__utime", download = ":_modernc.org__libc#download", install = ["utime"], module = "modernc.org/libc", visibility = ["PUBLIC"], deps = [])

go_module(
    name = "modernc.org__libc__uuid__uuid",
    download = ":_modernc.org__libc#download",
    install = ["uuid/uuid"],
    module = "modernc.org/libc",
    visibility = ["PUBLIC"],
    deps = [],
)

if is_platform(
    arch = [
        "amd64",
        "arm64",
    ],
    os = ["darwin"],
):
    go_module(name = "modernc.org__libc__wctype", download = ":_modernc.org__libc#download", install = ["wctype"], module = "modernc.org/libc", visibility = ["PUBLIC"], deps = [])

go_mod_download(
    name = "modernc.org__mathutil",
    _tag = "download",
    module = "modernc.org/mathutil",
    version = "v1.6.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "modernc.org__mathutil",
    download = ":_modernc.org__mathutil#download",
    install = ["."],
    module = "modernc.org/mathutil",
    visibility = ["PUBLIC"],
    deps = [":github.com__remyoudompheng__bigfft"],
)

go_mod_download(
    name = "modernc.org__memory",
    _tag = "download",
    module = "modernc.org/memory",
    version = "v1.8.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "modernc.org__memory",
    download = ":_modernc.org__memory#download",
    install = ["."],
    module = "modernc.org/memory",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "modernc.org__sqlite",
    _tag = "download",
    module = "modernc.org/sqlite",
    version = "v1.34.5",
    visibility = ["PUBLIC"],
)

go_module(
    name = "modernc.org__sqlite",
    download = ":_modernc.org__sqlite#download",
    install = ["."],
    module = "modernc.org/sqlite",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__sys__unix",
        ":modernc.org__libc",
        ":modernc.org__libc__sys__types",
        ":modernc.org__sqlite__lib",
    ],
)

go_module(
    name = "modernc.org__sqlite__lib",
    download = ":_modernc.org__sqlite#download",
    install = ["lib"],
    module = "modernc.org/sqlite",
    visibility = ["PUBLIC"],
    deps = [
        ":modernc.org__libc",
        ":modernc.org__libc__sys__types",
    ],
)

go_mod_download(
    name = "sigs.k8s.io__yaml",
    _tag = "download",
    module = "sigs.k8s.io/yaml",
    version = "v1.1.0",
    visibility = ["PUBLIC"],
)

go_module(
    name = "sigs.k8s.io__yaml",
    download = ":_sigs.k8s.io__yaml#download",
    install = ["."],
    module = "sigs.k8s.io/yaml",
    visibility = ["PUBLIC"],
    deps = [":gopkg.in__yaml.v2"],
)
